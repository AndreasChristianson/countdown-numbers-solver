(self.webpackChunkstatic_site_template=self.webpackChunkstatic_site_template||[]).push([[179],{9623:(e,t,n)=>{"use strict";n(4794);var r=n(3935),a=n(7294),o=n(3379),i=n.n(o),l=n(5150);i()(l.Z,{insert:"head",singleton:!1}),l.Z.locals;var u=n(9163),c=n(745),s=n(4698);const m={add:{opCode:"add",description:"Addition",applyNativeOperation:function(e,t){return e+t},symmetric:!0,symbol:"+"},subtract:{opCode:"subtract",description:"Subtraction",applyNativeOperation:function(e,t){return e-t},symmetric:!1,symbol:"-"},multiply:{opCode:"multiply",description:"Multiplication",applyNativeOperation:function(e,t){return e*t},symmetric:!0,symbol:"*"},divide:{opCode:"divide",description:"Division",applyNativeOperation:function(e,t){return e/t},symmetric:!1,symbol:"/"},exponentiation:{opCode:"exponentiation",description:"Power",applyNativeOperation:function(e,t){return Math.pow(e,t)},symmetric:!1,symbol:"^"}};var p=(0,u.ZP)(c.gN).withConfig({displayName:"Form__InputField",componentId:"sc-19wu0gt-0"})(["width:100%;"]),d=function(e){var t=e.formData,n=e.setFormData;return a.createElement(c.J9,{initialValues:t,validationSchema:s.Ry({numbersAsString:s.Z_().matches(/^(\x2D?([0-9]+)(\.[0-9]+)?[\t-\r \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]*){2,}$/,"At least two, base 10, whitespace delineated, numbers.").required("Required"),target:s.Rx().required("Required")}),onSubmit:function(e){n(e)}},a.createElement(c.l0,null,a.createElement("fieldset",null,a.createElement("legend",null,"Input game parameters"),a.createElement("label",{htmlFor:"numbersAsString"},"Numbers: (space separated)"),a.createElement("div",null,a.createElement(p,{name:"numbersAsString",type:"text"}),a.createElement(c.Bc,{name:"numbersAsString"})),a.createElement("label",{htmlFor:"target"},"Target Number:"),a.createElement("div",null,a.createElement(p,{name:"target",type:"number"}),a.createElement(c.Bc,{name:"target"})),a.createElement("div",{id:"checkbox-group"},"Allowed Operations:"),a.createElement("div",{role:"group","aria-labelledby":"checkbox-group"},Object.values(m).map((function(e){var t=e.opCode,n=e.description;return a.createElement("label",{key:t},a.createElement(c.gN,{type:"checkbox",name:"operations",value:t}),n)}))),a.createElement("button",{type:"submit"},"Solve"))))},f=u.ZP.pre.withConfig({displayName:"Step__StepContainer",componentId:"sc-11uuh-0"})([""]),b=function(e){var t=e.step;return a.createElement(f,null,t)},y=u.ZP.div.withConfig({displayName:"Solution__SolutionContainer",componentId:"sc-16f834a-0"})([""]),g=function(e){var t=e.solution,n=e.index;return a.createElement(y,null,a.createElement("h3",null,"Solution #".concat(n+1)),a.createElement("p",null,"Steps: ".concat(t.steps.length)),t.steps.map((function(e,t){return a.createElement(b,{step:e,key:t})})))};function h(){return new Worker(n.p+"find-solutions.worker.ff8cae981b04f355cdf0.worker.js")}function v(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,a=!1,o=void 0;try{for(var i,l=e[Symbol.iterator]();!(r=(i=l.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){a=!0,o=e}finally{try{r||null==l.return||l.return()}finally{if(a)throw o}}return n}}(e,t)||function(e,t){if(e){if("string"==typeof e)return A(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?A(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function A(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var E=function(e){var t=e.formData,n=v((0,a.useState)(new h),2),r=n[0],o=n[1],i=v((0,a.useState)(1/0),2),l=i[0],u=i[1],c=v((0,a.useState)([]),2),s=c[0],m=c[1],p=v((0,a.useState)(0),2),d=p[0],f=p[1],b=v((0,a.useState)("in progress..."),2),y=b[0],A=b[1],E=function(){r.terminate()};return(0,a.useEffect)((function(){var e=t.numbersAsString.split(/\s+/).map(Number);E();var n=new h;return o(n),u(1/0),m([]),f(0),A("in progress..."),n.postMessage({numbers:e,target:t.target,operations:t.operations}),E}),[t]),r.onmessage=function(e){var t=e.data,n=t.opType,r=function(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}(t,["opType"]);switch(n){case"updateEvalCount":f(r.evalCount);break;case"newMinDistanceFound":m([]),u(r.distance);break;case"addSolution":m((function(e){return e.unshift(r.solution),e}));break;case"complete":A("complete");break;default:console.log({opType:n,data:r})}},a.createElement("div",null,a.createElement("h2",null,"Search: ".concat(y)),a.createElement("div",null,"Solutions evaluated: ".concat(d.toLocaleString())),a.createElement("div",null,"".concat(s.length.toLocaleString()," solutions found with distance to target of ").concat(l)),a.createElement("div",null,"Displaying up to 10 of them"),s.slice(0,10).map((function(e,t){return a.createElement(g,{solution:e,key:t,index:t})})))},w=function(){return a.createElement("div",null,a.createElement("h1",null,"Countdown: Numbers Game"),a.createElement("p",null,"The numbers game is a game where contestants attempt to make a target\n      number by combining randomly selected numbers using addition, subtraction,\n      multiplication and division. ",a.createElement("a",{href:"https://en.wikipedia.org/wiki/Countdown_(game_show)#Numbers_round"},"Game details"),"."))};function S(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var C=u.ZP.div.withConfig({displayName:"Calculator__PageContainer",componentId:"sc-1jarxt4-0"})([""]),k=function(){var e,t,n=(e=(0,a.useState)({numbersAsString:"",target:0,operations:["add","subtract","multiply","divide"]}),t=2,function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,a=!1,o=void 0;try{for(var i,l=e[Symbol.iterator]();!(r=(i=l.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){a=!0,o=e}finally{try{r||null==l.return||l.return()}finally{if(a)throw o}}return n}}(e,t)||function(e,t){if(e){if("string"==typeof e)return S(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?S(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),r=n[0],o=n[1];return a.createElement(C,null,a.createElement(w,null),a.createElement(d,{formData:r,setFormData:o}),a.createElement(E,{formData:r}))};r.render(a.createElement(k,null),document.getElementById("root"))},5150:(e,t,n)=>{"use strict";n.d(t,{Z:()=>l});var r=n(4015),a=n.n(r),o=n(3645),i=n.n(o)()(a());i.push([e.id,"@media (prefers-color-scheme: dark) {\n  html {\n    background: #333;\n    color: white;\n  }\n  :link {\n    color: lightblue;\n  }\n  :visited {\n    color: plum;\n  }\n}\n\nbody {\n  max-width: 600px;\n  margin: auto;\n}\n","",{version:3,sources:["webpack://./src/main.css"],names:[],mappings:"AAAA;EACE;IACE,gBAAgB;IAChB,YAAY;EACd;EACA;IACE,gBAAgB;EAClB;EACA;IACE,WAAW;EACb;AACF;;AAEA;EACE,gBAAgB;EAChB,YAAY;AACd",sourcesContent:["@media (prefers-color-scheme: dark) {\n  html {\n    background: #333;\n    color: white;\n  }\n  :link {\n    color: lightblue;\n  }\n  :visited {\n    color: plum;\n  }\n}\n\nbody {\n  max-width: 600px;\n  margin: auto;\n}\n"],sourceRoot:""}]);const l=i}},0,[[9623,666,216]]]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,