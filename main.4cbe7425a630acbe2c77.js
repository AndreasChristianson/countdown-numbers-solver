(self.webpackChunkstatic_site_template=self.webpackChunkstatic_site_template||[]).push([[179],{7386:(e,t,n)=>{"use strict";n(4794);var r=n(3935),a=n(7294),o=n(3379),i=n.n(o),u=n(5150);i()(u.Z,{insert:"head",singleton:!1}),u.Z.locals;var l=n(9163);const c={add:{opCode:"add",description:"Addition",applyOperation:function(e,t){return e.plus(t)},applyNativeOperation:function(e,t){return e+t},symmetric:!0,symbol:"+"},subtract:{opCode:"subtract",description:"Subtraction",applyOperation:function(e,t){return e.minus(t)},applyNativeOperation:function(e,t){return e-t},symmetric:!1,symbol:"-"},multiply:{opCode:"multiply",description:"Multiplication",applyOperation:function(e,t){return e.times(t)},applyNativeOperation:function(e,t){return e*t},symmetric:!0,symbol:"*"},divide:{opCode:"divide",description:"Division",applyOperation:function(e,t){return e.div(t)},applyNativeOperation:function(e,t){return e/t},symmetric:!1,symbol:"/"},exponentiation:{opCode:"exponentiation",description:"Power",applyOperation:function(e,t){return e.pow(t)},applyNativeOperation:function(e,t){return Math.pow(e,t)},symmetric:!1,symbol:"^"}};var s=n(745),m=n(4698),p=(n(4431),(0,l.ZP)(s.gN).withConfig({displayName:"Form__InputField",componentId:"sc-19wu0gt-0"})(["width:100%;"])),d=function(e){var t=e.operations,n=e.setOperations,r=e.numbers,o=e.setNumbers,i=e.target,u=e.setTarget;return a.createElement(s.J9,{initialValues:{operations:t.map((function(e){return e.opCode})),numbers:r.join(" "),target:i},validationSchema:m.Ry({numbers:m.Z_().matches(/^(\x2D?([0-9]+)(\.[0-9]+)?[\t-\r \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]*){2,}$/,"At least two, base 10, whitespace delineated, numbers.").required("Required"),target:m.Rx().required("Required")}),onSubmit:function(e){n(e.operations.map((function(e){return c[e]})));var t=e.numbers.split(/[\t-\r \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]+/);o(t),u(e.target)}},a.createElement(s.l0,null,a.createElement("fieldset",null,a.createElement("legend",null,"Input game parameters"),a.createElement("label",{htmlFor:"numbers"},"Numbers: (space separated)"),a.createElement("div",null,a.createElement(p,{name:"numbers",type:"text"}),a.createElement(s.Bc,{name:"numbers"})),a.createElement("label",{htmlFor:"target"},"Target Number:"),a.createElement("div",null,a.createElement(p,{name:"target",type:"number"}),a.createElement(s.Bc,{name:"target"})),a.createElement("div",{id:"checkbox-group"},"Allowed Operations:"),a.createElement("div",{role:"group","aria-labelledby":"checkbox-group"},Object.values(c).map((function(e){var t=e.opCode,n=e.description;return a.createElement("label",{key:t},a.createElement(s.gN,{type:"checkbox",name:"operations",value:t}),n)}))),a.createElement("button",{type:"submit"},"Solve"))))},f=l.ZP.pre.withConfig({displayName:"Step__StepContainer",componentId:"sc-11uuh-0"})([""]),b=function(e){var t=e.step;return a.createElement(f,null,t)},y=l.ZP.div.withConfig({displayName:"Solution__SolutionContainer",componentId:"sc-16f834a-0"})([""]),g=function(e){var t=e.solution;return a.createElement(y,null,a.createElement("h3",null,"Distance: ".concat(t.distance,". Steps: ").concat(t.steps.length,".")),t.steps.map((function(e,t){return a.createElement(b,{step:e,key:t})})))};function h(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var v=function(e){var t=function(e){var t=e.target,n=e.operations,r=[],a=1/0,o=e.numbers.map(Number),i=new Array(o.length),u=Number(t);return function e(t){for(var l=t.steps,c=o.length,s=function(t){if(i[t])return"continue";for(var s=o[t],m=function(c){if(i[c])return"continue";var m,p=o[c],d=function(e,t){var n;if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(n=function(e,t){if(e){if("string"==typeof e)return h(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?h(e,t):void 0}}(e))||t&&e&&"number"==typeof e.length){n&&(e=n);var r=0,a=function(){};return{s:a,n:function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}},e:function(e){throw e},f:a}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var o,i=!0,u=!1;return{s:function(){n=e[Symbol.iterator]()},n:function(){var e=n.next();return i=e.done,e},e:function(e){u=!0,o=e},f:function(){try{i||null==n.return||n.return()}finally{if(u)throw o}}}}(n);try{var f=function(){var n=m.value,d=function(s,m){var p=n.applyNativeOperation(s,m);o.push(p),i[t]=!0,i[c]=!0;var d={left:s,right:m,result:p,operation:n};l.push(d);var f=Math.abs(u-p);f<a?(a=f,r=[{distance:f,steps:Array.from(l)}]):f===a&&r.push({distance:f,steps:Array.from(l)}),e({steps:l}),o.pop(),i[t]=!1,i[c]=!1,l.pop()};d(s,p),n.symmetric||d(p,s)};for(d.s();!(m=d.n()).done;)f()}catch(e){d.e(e)}finally{d.f()}},p=t+1;p<c;p++)m(p)},m=0;m<c-1;m++)s(m);return r}({steps:[]}),function(e,t){return e.map((function(e){return{distance:e.distance.toString(),steps:e.steps.map((function(e){return"".concat(e.left," ").concat(e.operation.symbol," ").concat(e.right," = ").concat(e.result)}))}})).sort((function(e,t){return e.steps.length-t.steps.length}))}(r)}({numbers:e.numbers,target:e.target,operations:e.operations});return a.createElement("div",null,t.map((function(e,t){return a.createElement(g,{solution:e,key:t})})))},A=function(){return a.createElement("div",null,a.createElement("h1",null,"Countdown: Numbers Game"),a.createElement("p",null,"The numbers game is a game where contestants attempt to make a target\n      number by combining randomly selected numbers using addition, subtraction,\n      multiplication and division. ",a.createElement("a",{href:"https://en.wikipedia.org/wiki/Countdown_(game_show)#Numbers_round"},"Game details"),"."))};function E(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,a=!1,o=void 0;try{for(var i,u=e[Symbol.iterator]();!(r=(i=u.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){a=!0,o=e}finally{try{r||null==u.return||u.return()}finally{if(a)throw o}}return n}}(e,t)||function(e,t){if(e){if("string"==typeof e)return C(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?C(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function C(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var w=l.ZP.div.withConfig({displayName:"Calculator__PageContainer",componentId:"sc-1jarxt4-0"})([""]),S=function(){var e=E((0,a.useState)([c.add,c.subtract,c.multiply,c.divide]),2),t=e[0],n=e[1],r=E((0,a.useState)([]),2),o=r[0],i=r[1],u=E((0,a.useState)(0),2),l=u[0],s=u[1];return a.createElement(w,null,a.createElement(A,null),a.createElement(d,{operations:t,setOperations:n,numbers:o,setNumbers:i,target:l,setTarget:s}),a.createElement(v,{operations:t,numbers:o,target:l}))};r.render(a.createElement(S,null),document.getElementById("root"))},5150:(e,t,n)=>{"use strict";n.d(t,{Z:()=>u});var r=n(4015),a=n.n(r),o=n(3645),i=n.n(o)()(a());i.push([e.id,"@media (prefers-color-scheme: dark) {\n  html {\n    background: #333;\n    color: white;\n  }\n  :link {\n    color: lightblue;\n  }\n  :visited {\n    color: plum;\n  }\n}\n\nbody {\n  max-width: 600px;\n  margin: auto;\n}\n","",{version:3,sources:["webpack://./src/main.css"],names:[],mappings:"AAAA;EACE;IACE,gBAAgB;IAChB,YAAY;EACd;EACA;IACE,gBAAgB;EAClB;EACA;IACE,WAAW;EACb;AACF;;AAEA;EACE,gBAAgB;EAChB,YAAY;AACd",sourcesContent:["@media (prefers-color-scheme: dark) {\n  html {\n    background: #333;\n    color: white;\n  }\n  :link {\n    color: lightblue;\n  }\n  :visited {\n    color: plum;\n  }\n}\n\nbody {\n  max-width: 600px;\n  margin: auto;\n}\n"],sourceRoot:""}]);const u=i}},0,[[7386,666,216]]]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,